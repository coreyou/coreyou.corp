# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# For the general syntax of property based configuration files see the
# documenation of org.apache.log4j.PropertyConfigurator.

# The root category uses the appender called A1. Since no priority is
# specified, the root category assumes the default priority for root
# which is DEBUG in log4j. The root category is the only category that
# has a default priority. All other categories need not be assigned a
# priority in which case they inherit their priority from the
# hierarchy.

# category is like package concept in JAVA. all class in the package follows the rule. 
#log4j.rootCategory=DEBUG, A1
#log4j.category.loggingUtil=ERROR, A1

# root logger setting
#log4j.rootLogger=ERROR, A1

# logger is responsible for recording the log.
# settting the logger loggingUtil.Log4jTest is DEBUG level and the output place is A1, f, rollingFile, dailyRolling. 
log4j.logger.loggingUtil.Log4jTest=ERROR, A1, f, rollingFile, dailyRolling

# appender is responsible for outputting the log to somewhere.
# appender A1 is defined as console output.
# logging console. 
log4j.appender.A1=org.apache.log4j.ConsoleAppender
# logging file.
log4j.appender.f=org.apache.log4j.FileAppender
log4j.appender.f.File=logs/log4jTest.log
log4j.appender.f.Append=true
# logging rolling file.
# when the file size is over 10KB, it will add new log file like log4jTestRollingFile.log.1, till log4jTestRollingFile.log.100
log4j.appender.rollingFile=org.apache.log4j.RollingFileAppender
log4j.appender.rollingFile.Threshold=DEBUG
log4j.appender.rollingFile.File=logs/log4jTestRollingFile.log
log4j.appender.rollingFile.Append=true
log4j.appender.rollingFile.MaxFileSize=10KB
log4j.appender.rollingFile.MaxBackupIndex=100
# logging daily rolling file.
# when it is a new day, it will add new log file like log4jTestDailyRolling.log.2014-09-21.
log4j.appender.dailyRolling=org.apache.log4j.DailyRollingFileAppender
log4j.appender.dailyRolling.File=logs/log4jTestDailyRolling.log
log4j.appender.dailyRolling.DatePattern=.yyyy-MM-dd

# define the output format
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
log4j.appender.A1.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss,SSS} [%C]-[%p] %m%n
log4j.appender.f.layout=org.apache.log4j.PatternLayout
log4j.appender.f.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss,SSS} [%C]-[%p] %m%n
log4j.appender.rollingFile.layout=org.apache.log4j.PatternLayout
log4j.appender.rollingFile.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss,SSS} [%C]-[%p] %m%n
log4j.appender.dailyRolling.layout=org.apache.log4j.PatternLayout
log4j.appender.dailyRolling.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss,SSS} [%C]-[%p] %m%n